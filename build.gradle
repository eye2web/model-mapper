buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.6.RELEASE")
    }
}

plugins {
    id 'java'
    id 'java-library'
}

ext {
    lombokVersion = '1.18.10'
    groupName = 'com.github.eye2web'
    artifactIdentifier = 'model-mapper'
    projectVersion = '2.2.0'
}

group groupName
version projectVersion
archivesBaseName = artifactIdentifier

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'signing'

dependencies {
    implementation "org.projectlombok:lombok:$lombokVersion",
            'org.apache.commons:commons-lang3:3.9'

    testImplementation 'junit:junit:4.12',
            'org.mockito:mockito-all:1.10.19',
            'org.springframework.boot:spring-boot-starter'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

}

bootJar.enabled = false
jar.enabled = true

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

wrapper {
    gradleVersion = '6.0.1'
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Modelmapper'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Map DTO and model objects using advanced options'
                url 'https://github.com/eye2web/model-mapper'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'Eye2web'
                        name = 'Remco van der Heijden'
                        email = 'remcovanderheijden@hotmail.com'
                    }
                }
            }
        }
    }
}

signing {
    sign configurations.archives
}

javadoc {
    if (JavaVersion.current().isJava11Compatible()) {
        options.addBooleanOption('html4', true)
    }
}